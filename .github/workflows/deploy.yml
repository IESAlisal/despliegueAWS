name: Deploy Flask App to ECS

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: ‚ö†Ô∏è DEBUG - Mostrar valores de secretos (INSEGURO)
        run: |
          echo "üö® ADVERTENCIA: Esto es INSEGURO - Los secretos estar√°n visibles en los logs"
          echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}"
          echo "ECS_SERVICE: ${{ secrets.ECS_SERVICE }}"
          echo "ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}"
          echo "Regi√≥n configurada: us-east-1"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Configure AWS Credentials1
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
              aws-region: us-east-1
              role-to-assume: arn:aws:sts::590183790645:assumed-role/voclabs/user4424701=Estudiante_de_prueba
              #role-session-name: MySessionName
      - name: üß™ Test AWS credentials antes de configurar
        run: |
          echo "Probando credenciales AWS..."
          aws sts get-caller-identity || echo "‚ùå Error al verificar identidad AWS"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
